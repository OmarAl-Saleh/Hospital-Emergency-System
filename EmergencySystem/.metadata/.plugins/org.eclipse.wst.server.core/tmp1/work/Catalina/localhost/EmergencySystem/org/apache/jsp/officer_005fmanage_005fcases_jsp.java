/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-05-25 12:35:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import models.Admission_Officer;
import models.Case;

public final class officer_005fmanage_005fcases_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("models.Case");
    _jspx_imports_classes.add("models.Admission_Officer");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    // Retrieve the Admission_Officer object from the session
    Admission_Officer officer = (Admission_Officer) session.getAttribute("off_signIn");

    if (officer == null) {
        response.sendRedirect("sign-in.jsp");
        return;
    }

    // Get the list of cases
    Case[] cases = officer.getCases();

    // Check if a case number is provided for actions
    String caseNumber = request.getParameter("caseNumber");
    String action = request.getParameter("action");

    String updateMessage = "";

    if (caseNumber != null && action != null) {
        switch (action) {
            case "cancel":
                officer.cancelCase(caseNumber);
                updateMessage = "Case " + caseNumber + " has been canceled.";
                break;
            case "reopen":
                officer.RenewCase(caseNumber);
                updateMessage = "Case " + caseNumber + " has been reopened.";
                break;
            case "admit":
                officer.admitPatient(caseNumber);
                updateMessage = "Case " + caseNumber + " has been admitted.";
                break;
            case "reject":
                officer.rejectCase(caseNumber);
                updateMessage = "Case " + caseNumber + " has been rejected.";
                break;
            case "hour":
                boolean exceeded = officer.hourValidate(caseNumber);
                updateMessage = "Case " + caseNumber + " exceeded one hour: " + exceeded;
                break;
        }
    }

    // Refresh the cases list after actions
    cases = officer.getCases();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"ISO-8859-1\">\r\n");
      out.write("    <title>Manage Cases</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table, th, td {\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th, td {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            background-color: #f2f2f2;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 10px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #555;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"text\"], input[type=\"password\"], input[type=\"email\"], input[type=\"tel\"] {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"submit\"], button {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            margin-right: 10px; /* Added margin for spacing */\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input[type=\"submit\"]:hover, button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .action-button {\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            margin-left:10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .update-box {\r\n");
      out.write("            background-color: #e7f3fe;\r\n");
      out.write("            color: #31708f;\r\n");
      out.write("            border: 1px solid #bce8f1;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            margin-top: 15px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .action-form {\r\n");
      out.write("            display: inline;\r\n");
      out.write("            margin-right: 10px; /* Added margin for spacing */\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h1>Manage Cases</h1>\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>Case Number</th>\r\n");
      out.write("                <th>Status</th>\r\n");
      out.write("                <th>Actions</th>\r\n");
      out.write("                <th>Patient is present</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            ");
 if (cases != null) { 
      out.write("\r\n");
      out.write("                ");
 for (Case c : cases) { 
      out.write("\r\n");
      out.write("                    <tr>\r\n");
      out.write("                        <td>");
      out.print( c.getCaseNumber() );
      out.write("</td>\r\n");
      out.write("                        <td>");
      out.print( c.getStatus() );
      out.write("</td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            ");
 if (!"Canceled".equals(c.getStatus())) { 
      out.write("\r\n");
      out.write("                                <form action=\"officer_manage_cases.jsp\" method=\"post\" class=\"action-form\" >\r\n");
      out.write("                                    <input type=\"hidden\" name=\"caseNumber\" value=\"");
      out.print( c.getCaseNumber() );
      out.write("\"/>\r\n");
      out.write("                                    <input type=\"hidden\" name=\"action\" value=\"cancel\"/>\r\n");
      out.write("                                    <button type=\"submit\" class=\"action-button\">Cancel</button>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            ");
 } else { 
      out.write("\r\n");
      out.write("                                <form action=\"officer_manage_cases.jsp\" method=\"post\" class=\"action-form\" >\r\n");
      out.write("                                    <input type=\"hidden\" name=\"caseNumber\" value=\"");
      out.print( c.getCaseNumber() );
      out.write("\"/>\r\n");
      out.write("                                    <input type=\"hidden\" name=\"action\" value=\"reopen\"/>\r\n");
      out.write("                                    <button type=\"submit\" class=\"action-button\">Reopen</button>\r\n");
      out.write("                                </form>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                            <form action=\"officer_manage_cases.jsp\" method=\"post\" class=\"action-form\" >\r\n");
      out.write("                                <input type=\"hidden\" name=\"caseNumber\" value=\"");
      out.print( c.getCaseNumber() );
      out.write("\"/>\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"admit\"/>\r\n");
      out.write("                                <button type=\"submit\" class=\"action-button\">Admit</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                            <form action=\"officer_manage_cases.jsp\" method=\"post\" class=\"action-form\" >\r\n");
      out.write("                                <input type=\"hidden\" name=\"caseNumber\" value=\"");
      out.print( c.getCaseNumber() );
      out.write("\"/>\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"reject\"/>\r\n");
      out.write("                                <button type=\"submit\" class=\"action-button\">Reject</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                            <form action=\"officer_manage_cases.jsp\" method=\"post\" class=\"action-form\" >\r\n");
      out.write("                                <input type=\"hidden\" name=\"caseNumber\" value=\"");
      out.print( c.getCaseNumber() );
      out.write("\"/>\r\n");
      out.write("                                <input type=\"hidden\" name=\"action\" value=\"hour\"/>\r\n");
      out.write("                                <button type=\"submit\" class=\"action-button\">Exceed one hour</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </td>\r\n");
      out.write("                        <td>\r\n");
      out.write("                            <input type=\"checkbox\" disabled ");
      out.print( c.isPresent() ? "checked" : "" );
      out.write("/>\r\n");
      out.write("                        </td>\r\n");
      out.write("                    </tr>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            ");
 } else { 
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td colspan=\"4\">No cases available</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </table>\r\n");
      out.write("        ");
 if (!updateMessage.isEmpty()) { 
      out.write("\r\n");
      out.write("            <div class=\"update-box\">\r\n");
      out.write("                ");
      out.print( updateMessage );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
