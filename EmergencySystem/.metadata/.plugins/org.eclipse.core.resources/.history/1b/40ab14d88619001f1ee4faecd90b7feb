package models;

import java.sql.*;
import java.util.Arrays;
import java.util.Date;

public class Patient {
    private String email;
    private String phoneNumber;
    private String firstName;
    private String lastName;
    private Date dob;
    private String address;
    private boolean present;
    private String[] medicalHistory;
    private String[] chronicDisease;
    private String[] allergy;

    // Database connection parameters
    private static final String DB_URL = "jdbc:oracle:thin:@localhost:1521:XE";
    private static final String DB_USER = "system";
    private static final String DB_PASSWORD = "Omr_20021129";

    public Patient(String email, String phoneNumber, String firstName, String lastName, Date dob, String address,
                   boolean present, String[] medicalHistory, String[] chronicDisease, String[] allergy) {
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.firstName = firstName;
        this.lastName = lastName;
        this.dob = dob;
        this.address = address;
        this.present = present;
        this.medicalHistory = medicalHistory;
        this.chronicDisease = chronicDisease;
        this.allergy = allergy;
    }

    // Database connection method
    private Connection connect() throws SQLException {
        return DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
    }

    // Method to insert a new patient and related data into the database
    public void insertPatient() throws SQLException {
        String patientSql = "INSERT INTO patient (email, phone_number, first_name, last_name, dob, address, present) VALUES (?, ?, ?, ?, ?, ?, ?)";
        String medicalHistorySql = "INSERT INTO patient_medical_history (phone_number, medical_history) VALUES (?, ?)";
        String chronicDiseaseSql = "INSERT INTO patient_chronic_disease (phone_number, chronic_disease) VALUES (?, ?)";
        String allergySql = "INSERT INTO patient_allergy (phone_number, allergy) VALUES (?, ?)";

        try (Connection conn = connect();
             PreparedStatement patientStmt = conn.prepareStatement(patientSql);
             PreparedStatement medicalHistoryStmt = conn.prepareStatement(medicalHistorySql);
             PreparedStatement chronicDiseaseStmt = conn.prepareStatement(chronicDiseaseSql);
             PreparedStatement allergyStmt = conn.prepareStatement(allergySql)) {

            // Insert into patient table
            patientStmt.setString(1, this.email);
            patientStmt.setString(2, this.phoneNumber);
            patientStmt.setString(3, this.firstName);
            patientStmt.setString(4, this.lastName);
            patientStmt.setDate(5, new java.sql.Date(this.dob.getTime()));
            patientStmt.setString(6, this.address);
            patientStmt.setBoolean(7, this.present);
            patientStmt.executeUpdate();

            // Insert into patient_medical_history table
            for (String history : this.medicalHistory) {
                medicalHistoryStmt.setString(1, this.phoneNumber);
                medicalHistoryStmt.setString(2, history);
                medicalHistoryStmt.executeUpdate();
            }

            // Insert into patient_chronic_disease table
            for (String disease : this.chronicDisease) {
                chronicDiseaseStmt.setString(1, this.phoneNumber);
                chronicDiseaseStmt.setString(2, disease);
                chronicDiseaseStmt.executeUpdate();
            }

            // Insert into patient_allergy table
            for (String allergy : this.allergy) {
                allergyStmt.setString(1, this.phoneNumber);
                allergyStmt.setString(2, allergy);
                allergyStmt.executeUpdate();
            }
        }
    }

    // Method to retrieve patient and related data from the database by phone number
    public static Patient selectPatient(String phoneNumber) throws SQLException {
        String patientSql = "SELECT * FROM patient WHERE phone_number = ?";
        String medicalHistorySql = "SELECT medical_history FROM patient_medical_history WHERE phone_number = ?";
        String chronicDiseaseSql = "SELECT chronic_disease FROM patient_chronic_disease WHERE phone_number = ?";
        String allergySql = "SELECT allergy FROM patient_allergy WHERE phone_number = ?";
        Patient patient = null;

        try (Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
             PreparedStatement patientStmt = conn.prepareStatement(patientSql);
             PreparedStatement medicalHistoryStmt = conn.prepareStatement(medicalHistorySql);
             PreparedStatement chronicDiseaseStmt = conn.prepareStatement(chronicDiseaseSql);
             PreparedStatement allergyStmt = conn.prepareStatement(allergySql)) {

            // Retrieve patient information
            patientStmt.setString(1, phoneNumber);
            ResultSet rs = patientStmt.executeQuery();

            if (rs.next()) {
                String email = rs.getString("email");
                String firstName = rs.getString("first_name");
                String lastName = rs.getString("last_name");
                Date dob = rs.getDate("dob");
                String address = rs.getString("address");
                boolean present = rs.getBoolean("present");

                // Retrieve medical history
                medicalHistoryStmt.setString(1, phoneNumber);
                ResultSet mhRs = medicalHistoryStmt.executeQuery();
                String[] medicalHistory = mhRs.next() ? mhRs.getString("medical_history").split(",") : new String[0];

                // Retrieve chronic diseases
                chronicDiseaseStmt.setString(1, phoneNumber);
                ResultSet cdRs = chronicDiseaseStmt.executeQuery();
                String[] chronicDisease = cdRs.next() ? cdRs.getString("chronic_disease").split(",") : new String[0];

                // Retrieve allergies
                allergyStmt.setString(1, phoneNumber);
                ResultSet allergyRs = allergyStmt.executeQuery();
                String[] allergy = allergyRs.next() ? allergyRs.getString("allergy").split(",") : new String[0];

                patient = new Patient(email, phoneNumber, firstName, lastName, dob, address, present, medicalHistory, chronicDisease, allergy);
            }
        }
        return patient;
    }

    // Getters and setters...

    public String toString() {
        return "Patient{" +
                "email='" + email + '\'' +
                ", phoneNumber='" + phoneNumber + '\'' +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", dob=" + dob +
                ", address='" + address + '\'' +
                ", present=" + present +
                ", medicalHistory=" + Arrays.toString(medicalHistory) +
                ", chronicDisease=" + Arrays.toString(chronicDisease) +
                ", allergy=" + Arrays.toString(allergy) +
                '}';
    }
}
